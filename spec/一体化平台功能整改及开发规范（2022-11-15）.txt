对现有能力的优化（11-20前整改完）：
1、提取公共能力，具体包括：资源管理（数据库实例、物理机、集群/AZ等）、主题风格、运行日志管理、平台用户和权限管理、平台安全管理、语言配置。
1）资源信息可以手动配置和导入。也支持在通过安装插件完成数据库安装后，将该数据库加入到平台管理的数据库实例中。
2）登录后，立即弹出“数据库实例信息”，让用户选择（第一次选择后，可以采用默认值），之后呈现现有的数据库实例首页，首页展示数据库实例配置和基本状态信息。
3）首页支持展示已有的功能插件及其状态，并支持通过快捷方式进入各个功能插件。
4）公共能力对外提供API接口。

2、现有的“集群工具（建议改名为 安装部署）”、“业务设计”、“运维监控”做成插件。
1）所有插件在进入时，都可以基于“资源信息”选择其要管理和操作的集群/数据库。如果插件需要额外的特有的配置，由插件自行实现。
2）各插件都采用统一的主题风格。
3）各插件支持自定义图标。

3、业务功能与平台管理功能要分离，插件功能（改名为插件管理）、安全中心要从左侧导航树上删除，放到右上角。
1）统一为：左侧导航树只放公共的业务功能和插件。右上角放平台管理功能，可以放在管理员下拉框内，需要基于用户权限控制。


平台和插件开发规范（文档提供，11-20前提供）：
1、平台只提供用户层面的功能访问通道，具体业务功能由各插件自行实现（除公共能力外）；插件对数据库/OS的管理、数据采集等操作，由插件自行建立访问通道，不经过平台。对于大型插件，其本身可能包含多个部件，并且需要部署在多台机器上，也只要求该插件利用适配层接入平台，插件部件之间的连接、状态管理等由插件自行实现，
2、平台与插件之间采用API接口相互访问，平台和插件均需要给出开发的接口列表。平台与插件的前后台采用RESTfull接口。
3、平台提供基础的公共能力，包括：资源管理、主题风格、运行日志管理、平台用户和权限管理、平台安全管理、语言配置。后续针对需要有平台实现的功能，有插件提出，经OPS Sig组评审决定。
4、平台提供资源管理的接口，包括：数据库实例、物理机、集群/AZ等的配置接口、查询接口。
5、平台和插件统一主题/UI风格，包括：UI背景、图标风格、图标大小、字体、字体大小、语言等。平台提供主题配置功能和查询接口；插件提供统一命名的设置接口，由平台在设置是调用。
6、平台和插件统一日志风格，包括：日志级别、日志文件数据和大小、绕接方式等，建议采用统一的日志组件；平台提供日志下载功能；平台提供日志配置功能和查询接口；插件提供统一命名的设置接口，由平台在设置是调用；平台规范输出日志的级别定义要求、信息安全要求等。
7、平台和插件统一错误提示风格，包括：错误严重级别定义、错误提示图标、错误提示框等。平台规范输出错误的信息要求、信息安全要求。插件的错误码ID范围由OPS SIG组分配。
8、平台和插件统一用户权限管理，包括：权限级别、允许的操作等。平台提供用户权限配置功能和查询接口；插件根据平台设置的权限控制自身功能。
9、平台提供建议的前后台组件及其组件配置要求。
10、平台定义出插件开发要求，包括：开发环境、编译环境、运行资源、需要注册的接口、插件信息等。插件信息需包括：名称、功能简介、版本号、接口列表等。后续基于安全考虑，还需要提供校验码，平台在安装插件时进行校验。
